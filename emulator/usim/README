CADR simulator
9/6/04
Brad Parker
brad@heeltoe.com

What is this?
-------------

This is a simple hack designed to emulate the CADR microprocessor
hardware.  A CADR is a second generation MIT lisp machine.  A good
description can be found in "A.I. Memo 528" from the MIT AI Labs
entitled, "CADR".

The CADR was a 32 bit microcoded microprocessor designed to run the
lisp language.

This program attempts to interpret the microcode found in the machine
starting with the "prom" microcode which runs when the machine is
first powered on.

What state is this in?
----------------------

The emulation is about 85% done.  It gets through the prom code and
loads the microcode band.  The disk emulation reads from a 'disk
image' file which is constructed with 'diskmaker'.  It looks like most
of the ALU code is ok as is the branch and byte code.

The divide code is still broken and needs to be fixed.  I put in a
hack which aborts the last step and now it seems ok, but I think
something is wrong with my emulation of the h/w.

The dispatch code is implemented but not tested.

There are some hacks for noticing unibus access but no xbus/unibus
mapping support.

Basic interrupt wiring is in place.

Some framebuffer ("tv") and keyboard/mouse emulation is in place.

What needs to be done?
----------------------

- fix the divide code
- test the dispatch emulation

And most important, find a valid load band.  Without this the emulation
is uninteresting.  Once we have a load band

- debug "tv" emulation
- finish mouse & keyboard emulation

And then we can boot the CADR into the lisp environment.

Long term I want to do some recompiling of the microcode into C and
assembler, both statically and on-the-fly.  This is the interesting
part for me :-)


