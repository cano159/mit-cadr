CADR simulator
10/18/04
Brad Parker
brad@heeltoe.com

What is this?
-------------

This is a simple hack designed to emulate the CADR microprocessor
hardware.  A CADR is a second generation MIT lisp machine.  A good
description can be found in "A.I. Memo 528" from the MIT AI Labs
entitled, "CADR".

The CADR was a 32 bit microcoded microprocessor designed to run the
lisp language.

This program attempts to interpret the microcode found in the machine
starting with the "prom" microcode which runs when the machine is
first powered on.

What state is this in?
----------------------

The emulation is about 90% done.  It gets through the prom code, loads
the microcode band, copies the band to swap and executes the load band.

and it boots a load band!

If you want to see the label trace try:

	./usim -n -t >output

The disk emulation reads from a 'disk image' file which is constructed
with 'diskmaker'.

I believe the divide code is still broken and needs to be fixed.  I
put in a hack which aborts the last step and now it seems ok, but I
think something is wrong with my emulation of the h/w.

The think the dispatch code is now correct.

There are some hacks for noticing unibus access but no xbus/unibus
mapping support.

Basic interrupt wiring is in place.

Some frame buffer ("tv") and keyboard/mouse emulation is in place.  It
emulates an old style "Knight" keyboard.

What needs to be done?
----------------------

- fix the divide code
- cleanup keyboard emulation
- add mouse emulation
- add chaosnet emulation

Long term I want to do some recompiling of the microcode into C and
assembler, both statically and on-the-fly.  This is the interesting
part :-)
